/**
 * MMC - Backend API
 * Motore di messaggistica API
 *
 * OpenAPI spec version: 0.3.0
 * Contact: d.ghilardi@reply.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.server

import io.ktor.application.ApplicationCall
import io.ktor.http.HttpMethod
import io.ktor.locations.*
import io.ktor.pipeline.PipelineContext
import io.ktor.routing.Route
import io.ktor.routing.method
import io.swagger.server.models.*


// NOTE: ktor-location@0.9.0 is missing extension for Route.delete. This includes it.
inline fun <reified T : Any> Route.delete(noinline body: suspend PipelineContext<Unit, ApplicationCall>.(T) -> Unit): Route {
    return location(T::class) {
        method(HttpMethod.Delete) {
            handle(body)
        }
    }
}


object Paths {


    /**
     * Delete device
     * Remove the given device
     * @param mMCAppCode application identifier
     * @param deviceId Id of the device to be deleted
     */
    @Location("/management/device/{deviceId}")
    class deleteDevice(val mMCAppCode: kotlin.String, val deviceId: kotlin.String)


    /**
     * Get the message status
     * This endpoint allows you to check the status of a queued message
     * @param mMCAppCode application identifier
     * @param mMCMessageId message identifier (optional)
     * @param mMCMessageUuid Message ID as returned by the /message/send (optional)
     */
    @Location("/message/check")
    class messageCheck(val mMCAppCode: kotlin.String, val mMCMessageId: kotlin.String? = null, val mMCMessageUuid: kotlin.String? = null)


}

