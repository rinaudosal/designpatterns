/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.CorporateAction;
import org.openapitools.model.CorporateActionAndPage;
import org.openapitools.model.CorporateActionSummary;
import org.openapitools.model.PageFilter;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2018-10-15T15:19:21.557+02:00[Europe/Rome]")

@Validated
@Api(value = "corporateActions", description = "the corporateActions API")
public interface CorporateActionsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "getCorporateActionById", nickname = "getCorporateActionByIdUsingGET", notes = "This method returns the {CorporateAction} whose {CorporateAction.id} is specified as parameter.", response = CorporateAction.class, authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "corporateactions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CorporateAction.class),
        @ApiResponse(code = 404, message = "Entity not found. This response corresponds to the '404' HTTP status code.") })
    @RequestMapping(value = "/corporateActions/{corporateActionId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<CorporateAction> getCorporateActionByIdUsingGET(@ApiParam(value = "The Id of the {CorporateAction}",required=true) @PathVariable("corporateActionId") String corporateActionId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"dividendActionData\" : {    \"dividendValue\" : 0.80082819046101150206595775671303272247314453125,    \"retentionType\" : \"retentionType\",    \"associatedTo\" : \"associatedTo\",    \"dividendActionType\" : \"dividendActionType\",    \"settlementDate\" : \"2000-01-23T04:56:07.000+00:00\",    \"paymentDate\" : \"2000-01-23T04:56:07.000+00:00\",    \"currencyCode\" : \"currencyCode\",    \"cutoffDate\" : \"2000-01-23T04:56:07.000+00:00\"  },  \"splitActionData\" : {    \"ratio\" : \"ratio\"  },  \"currencyChangeActionData\" : {    \"associatedTo\" : \"associatedTo\",    \"newCurrencyCode\" : \"newCurrencyCode\",    \"oldCurrencyCode\" : \"oldCurrencyCode\"  },  \"basicCorporateAction\" : {    \"date\" : \"2000-01-23T04:56:07.000+00:00\",    \"eventTypeCode\" : \"eventTypeCode\",    \"eventSource\" : \"FUND\",    \"executionDate\" : \"2000-01-23T04:56:07.000+00:00\",    \"name\" : \"name\",    \"description\" : \"description\",    \"isin\" : \"isin\"  },  \"id\" : \"id\",  \"fundMergeActionData\" : {    \"mergerName\" : \"mergerName\",    \"mergerIsin\" : \"mergerIsin\",    \"ratio\" : 6.02745618307040320615897144307382404804229736328125  },  \"fundName\" : \"fundName\"}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "getCorporateActionSummaryById", nickname = "getCorporateActionSummaryByIdUsingGET", notes = "This method returns the {CorporateActionSummary} whose {CorporateActionSummary.id} is specified as parameter.", response = CorporateActionSummary.class, authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "corporateactions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CorporateActionSummary.class),
        @ApiResponse(code = 404, message = "Entity not found. This response corresponds to the '404' HTTP status code.") })
    @RequestMapping(value = "/corporateActions/{corporateActionId}/summary",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<CorporateActionSummary> getCorporateActionSummaryByIdUsingGET(@ApiParam(value = "The Id of the {CorporateAction}",required=true) @PathVariable("corporateActionId") String corporateActionId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"documentLanguageCodes\" : [ \"documentLanguageCodes\", \"documentLanguageCodes\" ],  \"file\" : {    \"filename\" : \"filename\",    \"size\" : 0,    \"creationDate\" : \"2000-01-23T04:56:07.000+00:00\",    \"title\" : \"title\",    \"url\" : \"url\"  },  \"basicCorporateAction\" : {    \"date\" : \"2000-01-23T04:56:07.000+00:00\",    \"eventTypeCode\" : \"eventTypeCode\",    \"eventSource\" : \"FUND\",    \"executionDate\" : \"2000-01-23T04:56:07.000+00:00\",    \"name\" : \"name\",    \"description\" : \"description\",    \"isin\" : \"isin\"  },  \"corporateActionId\" : \"corporateActionId\",  \"officialComunicationNumber\" : 6}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "listCorporateActions", nickname = "listCorporateActionsUsingPOST", notes = "", response = CorporateActionAndPage.class, authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "corporateactions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CorporateActionAndPage.class),
        @ApiResponse(code = 400, message = "Illegal input for operation. This response corresponds to the '400' HTTP status code.") })
    @RequestMapping(value = "/corporateActions/list",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<CorporateActionAndPage> listCorporateActionsUsingPOST(@ApiParam(value = "body"  )  @Valid @RequestBody PageFilter pageFilter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"page\" : {    \"pageNumber\" : 6,    \"resultPerPage\" : 1,    \"totalNumberOfResult\" : 5,    \"orderPage\" : {      \"by\" : \"by\",      \"sort\" : \"ASCENDING\"    }  },  \"corporateActions\" : [ {    \"dividendActionData\" : {      \"dividendValue\" : 0.80082819046101150206595775671303272247314453125,      \"retentionType\" : \"retentionType\",      \"associatedTo\" : \"associatedTo\",      \"dividendActionType\" : \"dividendActionType\",      \"settlementDate\" : \"2000-01-23T04:56:07.000+00:00\",      \"paymentDate\" : \"2000-01-23T04:56:07.000+00:00\",      \"currencyCode\" : \"currencyCode\",      \"cutoffDate\" : \"2000-01-23T04:56:07.000+00:00\"    },    \"splitActionData\" : {      \"ratio\" : \"ratio\"    },    \"currencyChangeActionData\" : {      \"associatedTo\" : \"associatedTo\",      \"newCurrencyCode\" : \"newCurrencyCode\",      \"oldCurrencyCode\" : \"oldCurrencyCode\"    },    \"basicCorporateAction\" : {      \"date\" : \"2000-01-23T04:56:07.000+00:00\",      \"eventTypeCode\" : \"eventTypeCode\",      \"eventSource\" : \"FUND\",      \"executionDate\" : \"2000-01-23T04:56:07.000+00:00\",      \"name\" : \"name\",      \"description\" : \"description\",      \"isin\" : \"isin\"    },    \"id\" : \"id\",    \"fundMergeActionData\" : {      \"mergerName\" : \"mergerName\",      \"mergerIsin\" : \"mergerIsin\",      \"ratio\" : 6.02745618307040320615897144307382404804229736328125    },    \"fundName\" : \"fundName\"  }, {    \"dividendActionData\" : {      \"dividendValue\" : 0.80082819046101150206595775671303272247314453125,      \"retentionType\" : \"retentionType\",      \"associatedTo\" : \"associatedTo\",      \"dividendActionType\" : \"dividendActionType\",      \"settlementDate\" : \"2000-01-23T04:56:07.000+00:00\",      \"paymentDate\" : \"2000-01-23T04:56:07.000+00:00\",      \"currencyCode\" : \"currencyCode\",      \"cutoffDate\" : \"2000-01-23T04:56:07.000+00:00\"    },    \"splitActionData\" : {      \"ratio\" : \"ratio\"    },    \"currencyChangeActionData\" : {      \"associatedTo\" : \"associatedTo\",      \"newCurrencyCode\" : \"newCurrencyCode\",      \"oldCurrencyCode\" : \"oldCurrencyCode\"    },    \"basicCorporateAction\" : {      \"date\" : \"2000-01-23T04:56:07.000+00:00\",      \"eventTypeCode\" : \"eventTypeCode\",      \"eventSource\" : \"FUND\",      \"executionDate\" : \"2000-01-23T04:56:07.000+00:00\",      \"name\" : \"name\",      \"description\" : \"description\",      \"isin\" : \"isin\"    },    \"id\" : \"id\",    \"fundMergeActionData\" : {      \"mergerName\" : \"mergerName\",      \"mergerIsin\" : \"mergerIsin\",      \"ratio\" : 6.02745618307040320615897144307382404804229736328125    },    \"fundName\" : \"fundName\"  } ]}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
