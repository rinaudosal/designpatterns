/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.AfbGeographicalAreaAndPage;
import org.openapitools.model.AfbGeographicalAreaFilterAndPageFilter;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2018-10-15T15:19:21.557+02:00[Europe/Rome]")

@Validated
@Api(value = "afbGeographicAreas", description = "the afbGeographicAreas API")
public interface AfbGeographicAreasApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "listAfbGeographicalAreas", nickname = "listAfbGeographicalAreasUsingPOST", notes = "Get a list of afbGeographicalAreas.", response = AfbGeographicalAreaAndPage.class, authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "afbgeographicareas", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = AfbGeographicalAreaAndPage.class),
        @ApiResponse(code = 400, message = "Illegal input for operation. This response corresponds to the '400' HTTP status code.") })
    @RequestMapping(value = "/afbGeographicAreas/hierarchic/list",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<AfbGeographicalAreaAndPage> listAfbGeographicalAreasUsingPOST(@ApiParam(value = "body"  )  @Valid @RequestBody AfbGeographicalAreaFilterAndPageFilter afbGeographicalAreaFilterAndPageFilter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"page\" : {    \"pageNumber\" : 6,    \"resultPerPage\" : 1,    \"totalNumberOfResult\" : 5,    \"orderPage\" : {      \"by\" : \"by\",      \"sort\" : \"ASCENDING\"    }  },  \"afbGeographicAreas\" : [ {    \"parent\" : \"parent\",    \"afbGeographicalAreaCode\" : \"afbGeographicalAreaCode\",    \"order\" : 0  }, {    \"parent\" : \"parent\",    \"afbGeographicalAreaCode\" : \"afbGeographicalAreaCode\",    \"order\" : 0  } ]}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
