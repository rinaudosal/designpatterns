/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.CalculationPeriod;
import org.openapitools.model.WeightedAnnualPerformanceAndPage;
import org.openapitools.model.WeightedCommonDateFilter;
import org.openapitools.model.WeightedCumulativePerformanceAndPage;
import org.openapitools.model.WeightedHistoricalPerformanceAndPage;
import org.openapitools.model.WeightedHistoricalPerformanceFilterAndPageFilter;
import org.openapitools.model.WeightedPerformanceFilter;
import org.openapitools.model.WeightedPerformanceFilterAndPageFilter;
import org.openapitools.model.WeightedRiskClassificationAndPage;
import org.openapitools.model.WeightedStatisticAndPage;
import org.openapitools.model.WeightedStatisticFilterAndPageFilter;
import org.openapitools.model.WeightedStatisticRawFilterAndPageFilter;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2018-10-15T15:19:21.557+02:00[Europe/Rome]")

@Validated
@Api(value = "compare", description = "the compare API")
public interface CompareApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "compareWeightedAnnualPerformances", nickname = "compareWeightedAnnualPerformancesUsingPOST", notes = "", response = WeightedAnnualPerformanceAndPage.class, authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "compare", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = WeightedAnnualPerformanceAndPage.class),
        @ApiResponse(code = 400, message = "Illegal input for operation. This response corresponds to the '400' HTTP status code.") })
    @RequestMapping(value = "/compare/performances/annual/list",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<WeightedAnnualPerformanceAndPage> compareWeightedAnnualPerformancesUsingPOST(@ApiParam(value = "body"  )  @Valid @RequestBody WeightedPerformanceFilterAndPageFilter weightedPerformanceFilterAndPageFilter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"weightedAndAnnualPerformances\" : [ {    \"annualPerformance\" : {      \"history1\" : 0.80082819046101150206595775671303272247314453125,      \"calculationPeriod\" : {        \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",        \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"      },      \"history2\" : 6.02745618307040320615897144307382404804229736328125,      \"history3\" : 1.46581298050294517310021547018550336360931396484375,      \"ytd\" : 2.3021358869347654518833223846741020679473876953125,      \"history4\" : 5.962133916683182377482808078639209270477294921875,      \"history5\" : 5.63737665663332876420099637471139430999755859375    },    \"instrument\" : {      \"reference\" : {        \"id\" : \"id\",        \"label\" : \"label\",        \"url\" : \"url\"      },      \"instrumentType\" : \"FUND\",      \"weight\" : 0.80082819046101150206595775671303272247314453125    }  }, {    \"annualPerformance\" : {      \"history1\" : 0.80082819046101150206595775671303272247314453125,      \"calculationPeriod\" : {        \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",        \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"      },      \"history2\" : 6.02745618307040320615897144307382404804229736328125,      \"history3\" : 1.46581298050294517310021547018550336360931396484375,      \"ytd\" : 2.3021358869347654518833223846741020679473876953125,      \"history4\" : 5.962133916683182377482808078639209270477294921875,      \"history5\" : 5.63737665663332876420099637471139430999755859375    },    \"instrument\" : {      \"reference\" : {        \"id\" : \"id\",        \"label\" : \"label\",        \"url\" : \"url\"      },      \"instrumentType\" : \"FUND\",      \"weight\" : 0.80082819046101150206595775671303272247314453125    }  } ],  \"calculationPeriod\" : {    \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",    \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"  },  \"page\" : {    \"pageNumber\" : 6,    \"resultPerPage\" : 1,    \"totalNumberOfResult\" : 5,    \"orderPage\" : {      \"by\" : \"by\",      \"sort\" : \"ASCENDING\"    }  }}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "compareWeightedCumulativePerformances", nickname = "compareWeightedCumulativePerformancesUsingPOST", notes = "", response = WeightedCumulativePerformanceAndPage.class, authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "compare", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = WeightedCumulativePerformanceAndPage.class),
        @ApiResponse(code = 400, message = "Illegal input for operation. This response corresponds to the '400' HTTP status code.") })
    @RequestMapping(value = "/compare/performances/cumulative/list",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<WeightedCumulativePerformanceAndPage> compareWeightedCumulativePerformancesUsingPOST(@ApiParam(value = "body"  )  @Valid @RequestBody WeightedPerformanceFilterAndPageFilter weightedPerformanceFilterAndPageFilter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"calculationPeriod\" : {    \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",    \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"  },  \"page\" : {    \"pageNumber\" : 6,    \"resultPerPage\" : 1,    \"totalNumberOfResult\" : 5,    \"orderPage\" : {      \"by\" : \"by\",      \"sort\" : \"ASCENDING\"    }  },  \"weightedCumulativePerformances\" : [ {    \"instrument\" : {      \"reference\" : {        \"id\" : \"id\",        \"label\" : \"label\",        \"url\" : \"url\"      },      \"instrumentType\" : \"FUND\",      \"weight\" : 0.80082819046101150206595775671303272247314453125    },    \"cumulativePerformance\" : {      \"oneMonth\" : 5.63737665663332876420099637471139430999755859375,      \"threeMonths\" : 9.301444243932575517419536481611430644989013671875,      \"oneYear\" : 2.3021358869347654518833223846741020679473876953125,      \"week\" : 7.3862819483858839220147274318151175975799560546875,      \"threeYears\" : 3.61607674925191080461672754609026014804840087890625,      \"fiveYears\" : 6.02745618307040320615897144307382404804229736328125,      \"twelveYears\" : 2.027123023002321833274663731572218239307403564453125,      \"sixMonths\" : 7.061401241503109105224211816675961017608642578125,      \"calculationPeriod\" : {        \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",        \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"      },      \"fromInception\" : 1.46581298050294517310021547018550336360931396484375,      \"mtd\" : 5.962133916683182377482808078639209270477294921875,      \"twoMonth\" : 4.1456080298839363962315474054776132106781005859375,      \"day\" : 0.80082819046101150206595775671303272247314453125    }  }, {    \"instrument\" : {      \"reference\" : {        \"id\" : \"id\",        \"label\" : \"label\",        \"url\" : \"url\"      },      \"instrumentType\" : \"FUND\",      \"weight\" : 0.80082819046101150206595775671303272247314453125    },    \"cumulativePerformance\" : {      \"oneMonth\" : 5.63737665663332876420099637471139430999755859375,      \"threeMonths\" : 9.301444243932575517419536481611430644989013671875,      \"oneYear\" : 2.3021358869347654518833223846741020679473876953125,      \"week\" : 7.3862819483858839220147274318151175975799560546875,      \"threeYears\" : 3.61607674925191080461672754609026014804840087890625,      \"fiveYears\" : 6.02745618307040320615897144307382404804229736328125,      \"twelveYears\" : 2.027123023002321833274663731572218239307403564453125,      \"sixMonths\" : 7.061401241503109105224211816675961017608642578125,      \"calculationPeriod\" : {        \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",        \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"      },      \"fromInception\" : 1.46581298050294517310021547018550336360931396484375,      \"mtd\" : 5.962133916683182377482808078639209270477294921875,      \"twoMonth\" : 4.1456080298839363962315474054776132106781005859375,      \"day\" : 0.80082819046101150206595775671303272247314453125    }  } ]}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "compareWeightedHistoricalPerformances", nickname = "compareWeightedHistoricalPerformancesUsingPOST", notes = "", response = WeightedHistoricalPerformanceAndPage.class, authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "compare", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = WeightedHistoricalPerformanceAndPage.class),
        @ApiResponse(code = 400, message = "Illegal input for operation. This response corresponds to the '400' HTTP status code.") })
    @RequestMapping(value = "/compare/performances/historical/list",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<WeightedHistoricalPerformanceAndPage> compareWeightedHistoricalPerformancesUsingPOST(@ApiParam(value = "body"  )  @Valid @RequestBody WeightedHistoricalPerformanceFilterAndPageFilter weightedHistoricalPerformanceFilterAndPageFilter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"calculationPeriod\" : {    \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",    \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"  },  \"weightedHistoricalPerformance\" : [ {    \"historicalPerformance\" : {      \"date\" : \"2000-01-23T04:56:07.000+00:00\",      \"name\" : \"name\",      \"value\" : 0.80082819046101150206595775671303272247314453125    },    \"instrument\" : {      \"reference\" : {        \"id\" : \"id\",        \"label\" : \"label\",        \"url\" : \"url\"      },      \"instrumentType\" : \"FUND\",      \"weight\" : 0.80082819046101150206595775671303272247314453125    }  }, {    \"historicalPerformance\" : {      \"date\" : \"2000-01-23T04:56:07.000+00:00\",      \"name\" : \"name\",      \"value\" : 0.80082819046101150206595775671303272247314453125    },    \"instrument\" : {      \"reference\" : {        \"id\" : \"id\",        \"label\" : \"label\",        \"url\" : \"url\"      },      \"instrumentType\" : \"FUND\",      \"weight\" : 0.80082819046101150206595775671303272247314453125    }  } ],  \"page\" : {    \"pageNumber\" : 6,    \"resultPerPage\" : 1,    \"totalNumberOfResult\" : 5,    \"orderPage\" : {      \"by\" : \"by\",      \"sort\" : \"ASCENDING\"    }  }}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "compareWeightedRiskClassifications", nickname = "compareWeightedRiskClassificationsUsingPOST", notes = "", response = WeightedRiskClassificationAndPage.class, authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "compare", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = WeightedRiskClassificationAndPage.class),
        @ApiResponse(code = 400, message = "Illegal input for operation. This response corresponds to the '400' HTTP status code.") })
    @RequestMapping(value = "/compare/statistics/riskClassification/list",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<WeightedRiskClassificationAndPage> compareWeightedRiskClassificationsUsingPOST(@ApiParam(value = "body"  )  @Valid @RequestBody WeightedStatisticFilterAndPageFilter weightedStatisticFilterAndPageFilter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"calculationPeriod\" : {    \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",    \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"  },  \"page\" : {    \"pageNumber\" : 6,    \"resultPerPage\" : 1,    \"totalNumberOfResult\" : 5,    \"orderPage\" : {      \"by\" : \"by\",      \"sort\" : \"ASCENDING\"    }  },  \"weightedRiskClassifications\" : [ {    \"instrument\" : {      \"reference\" : {        \"id\" : \"id\",        \"label\" : \"label\",        \"url\" : \"url\"      },      \"instrumentType\" : \"FUND\",      \"weight\" : 0.80082819046101150206595775671303272247314453125    },    \"riskClassification\" : {      \"benchmarkVolatility\" : 6.02745618307040320615897144307382404804229736328125,      \"instrumentPerformance\" : 1.46581298050294517310021547018550336360931396484375,      \"instrumentVolatility\" : 5.962133916683182377482808078639209270477294921875,      \"benchmarkPerformance\" : 0.80082819046101150206595775671303272247314453125    }  }, {    \"instrument\" : {      \"reference\" : {        \"id\" : \"id\",        \"label\" : \"label\",        \"url\" : \"url\"      },      \"instrumentType\" : \"FUND\",      \"weight\" : 0.80082819046101150206595775671303272247314453125    },    \"riskClassification\" : {      \"benchmarkVolatility\" : 6.02745618307040320615897144307382404804229736328125,      \"instrumentPerformance\" : 1.46581298050294517310021547018550336360931396484375,      \"instrumentVolatility\" : 5.962133916683182377482808078639209270477294921875,      \"benchmarkPerformance\" : 0.80082819046101150206595775671303272247314453125    }  } ]}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "compareWeightedStatisticsRaw", nickname = "compareWeightedStatisticsRawUsingPOST", notes = "", response = WeightedStatisticAndPage.class, authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "compare", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = WeightedStatisticAndPage.class),
        @ApiResponse(code = 400, message = "Illegal input for operation. This response corresponds to the '400' HTTP status code.") })
    @RequestMapping(value = "/compare/statistics/list/raw",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<WeightedStatisticAndPage> compareWeightedStatisticsRawUsingPOST(@ApiParam(value = "body"  )  @Valid @RequestBody WeightedStatisticRawFilterAndPageFilter weightedStatisticRawFilterAndPageFilter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"calculationPeriod\" : {    \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",    \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"  },  \"weightedStatistics\" : [ {    \"statistic\" : {      \"instrumentStatistic\" : {        \"calculationPeriod\" : {          \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",          \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"        },        \"performance\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"maxDrawdown\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"sharpeRatio\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"volatility\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"returnOnRevenue\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        }      },      \"benchmarkStatistic\" : {        \"calculationPeriod\" : {          \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",          \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"        },        \"performance\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"maxDrawdown\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"sharpeRatio\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"volatility\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"returnOnRevenue\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        }      },      \"benchmarkId\" : \"benchmarkId\",      \"relative\" : {        \"r2\" : 1.489415909854170383397331534069962799549102783203125,        \"trackingError\" : 6.8468526983526398765889098285697400569915771484375,        \"calculationPeriod\" : {          \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",          \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"        },        \"correlation\" : 7.3862819483858839220147274318151175975799560546875,        \"infoRatio\" : 1.231513536777255612975068288506008684635162353515625,        \"actPremium\" : 3.61607674925191080461672754609026014804840087890625,        \"alpha\" : 2.027123023002321833274663731572218239307403564453125,        \"treynorRatio\" : 7.4577447736837658709418974467553198337554931640625,        \"jesenAlpha\" : 1.024645700144157789424070870154537260532379150390625,        \"beta\" : 4.1456080298839363962315474054776132106781005859375      }    },    \"instrument\" : {      \"reference\" : {        \"id\" : \"id\",        \"label\" : \"label\",        \"url\" : \"url\"      },      \"instrumentType\" : \"FUND\",      \"weight\" : 0.80082819046101150206595775671303272247314453125    }  }, {    \"statistic\" : {      \"instrumentStatistic\" : {        \"calculationPeriod\" : {          \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",          \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"        },        \"performance\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"maxDrawdown\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"sharpeRatio\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"volatility\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"returnOnRevenue\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        }      },      \"benchmarkStatistic\" : {        \"calculationPeriod\" : {          \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",          \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"        },        \"performance\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"maxDrawdown\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"sharpeRatio\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"volatility\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"returnOnRevenue\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        }      },      \"benchmarkId\" : \"benchmarkId\",      \"relative\" : {        \"r2\" : 1.489415909854170383397331534069962799549102783203125,        \"trackingError\" : 6.8468526983526398765889098285697400569915771484375,        \"calculationPeriod\" : {          \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",          \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"        },        \"correlation\" : 7.3862819483858839220147274318151175975799560546875,        \"infoRatio\" : 1.231513536777255612975068288506008684635162353515625,        \"actPremium\" : 3.61607674925191080461672754609026014804840087890625,        \"alpha\" : 2.027123023002321833274663731572218239307403564453125,        \"treynorRatio\" : 7.4577447736837658709418974467553198337554931640625,        \"jesenAlpha\" : 1.024645700144157789424070870154537260532379150390625,        \"beta\" : 4.1456080298839363962315474054776132106781005859375      }    },    \"instrument\" : {      \"reference\" : {        \"id\" : \"id\",        \"label\" : \"label\",        \"url\" : \"url\"      },      \"instrumentType\" : \"FUND\",      \"weight\" : 0.80082819046101150206595775671303272247314453125    }  } ],  \"page\" : {    \"pageNumber\" : 6,    \"resultPerPage\" : 1,    \"totalNumberOfResult\" : 5,    \"orderPage\" : {      \"by\" : \"by\",      \"sort\" : \"ASCENDING\"    }  }}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "compareWeightedStatistics", nickname = "compareWeightedStatisticsUsingPOST", notes = "", response = WeightedStatisticAndPage.class, authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "compare", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = WeightedStatisticAndPage.class),
        @ApiResponse(code = 400, message = "Illegal input for operation. This response corresponds to the '400' HTTP status code.") })
    @RequestMapping(value = "/compare/statistics/list",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<WeightedStatisticAndPage> compareWeightedStatisticsUsingPOST(@ApiParam(value = "body"  )  @Valid @RequestBody WeightedStatisticFilterAndPageFilter weightedStatisticFilterAndPageFilter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"calculationPeriod\" : {    \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",    \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"  },  \"weightedStatistics\" : [ {    \"statistic\" : {      \"instrumentStatistic\" : {        \"calculationPeriod\" : {          \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",          \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"        },        \"performance\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"maxDrawdown\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"sharpeRatio\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"volatility\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"returnOnRevenue\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        }      },      \"benchmarkStatistic\" : {        \"calculationPeriod\" : {          \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",          \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"        },        \"performance\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"maxDrawdown\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"sharpeRatio\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"volatility\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"returnOnRevenue\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        }      },      \"benchmarkId\" : \"benchmarkId\",      \"relative\" : {        \"r2\" : 1.489415909854170383397331534069962799549102783203125,        \"trackingError\" : 6.8468526983526398765889098285697400569915771484375,        \"calculationPeriod\" : {          \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",          \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"        },        \"correlation\" : 7.3862819483858839220147274318151175975799560546875,        \"infoRatio\" : 1.231513536777255612975068288506008684635162353515625,        \"actPremium\" : 3.61607674925191080461672754609026014804840087890625,        \"alpha\" : 2.027123023002321833274663731572218239307403564453125,        \"treynorRatio\" : 7.4577447736837658709418974467553198337554931640625,        \"jesenAlpha\" : 1.024645700144157789424070870154537260532379150390625,        \"beta\" : 4.1456080298839363962315474054776132106781005859375      }    },    \"instrument\" : {      \"reference\" : {        \"id\" : \"id\",        \"label\" : \"label\",        \"url\" : \"url\"      },      \"instrumentType\" : \"FUND\",      \"weight\" : 0.80082819046101150206595775671303272247314453125    }  }, {    \"statistic\" : {      \"instrumentStatistic\" : {        \"calculationPeriod\" : {          \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",          \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"        },        \"performance\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"maxDrawdown\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"sharpeRatio\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"volatility\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"returnOnRevenue\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        }      },      \"benchmarkStatistic\" : {        \"calculationPeriod\" : {          \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",          \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"        },        \"performance\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"maxDrawdown\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"sharpeRatio\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"volatility\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        },        \"returnOnRevenue\" : {          \"threeMonths\" : 5.63737665663332876420099637471139430999755859375,          \"oneYear\" : 6.02745618307040320615897144307382404804229736328125,          \"period\" : 1.46581298050294517310021547018550336360931396484375,          \"threeYears\" : 2.3021358869347654518833223846741020679473876953125,          \"ytd\" : 9.301444243932575517419536481611430644989013671875,          \"fiveYears\" : 0.80082819046101150206595775671303272247314453125,          \"twelveYears\" : 7.061401241503109105224211816675961017608642578125,          \"sixMonths\" : 5.962133916683182377482808078639209270477294921875        }      },      \"benchmarkId\" : \"benchmarkId\",      \"relative\" : {        \"r2\" : 1.489415909854170383397331534069962799549102783203125,        \"trackingError\" : 6.8468526983526398765889098285697400569915771484375,        \"calculationPeriod\" : {          \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",          \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"        },        \"correlation\" : 7.3862819483858839220147274318151175975799560546875,        \"infoRatio\" : 1.231513536777255612975068288506008684635162353515625,        \"actPremium\" : 3.61607674925191080461672754609026014804840087890625,        \"alpha\" : 2.027123023002321833274663731572218239307403564453125,        \"treynorRatio\" : 7.4577447736837658709418974467553198337554931640625,        \"jesenAlpha\" : 1.024645700144157789424070870154537260532379150390625,        \"beta\" : 4.1456080298839363962315474054776132106781005859375      }    },    \"instrument\" : {      \"reference\" : {        \"id\" : \"id\",        \"label\" : \"label\",        \"url\" : \"url\"      },      \"instrumentType\" : \"FUND\",      \"weight\" : 0.80082819046101150206595775671303272247314453125    }  } ],  \"page\" : {    \"pageNumber\" : 6,    \"resultPerPage\" : 1,    \"totalNumberOfResult\" : 5,    \"orderPage\" : {      \"by\" : \"by\",      \"sort\" : \"ASCENDING\"    }  }}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "generateCompareOverviewReportAsPdf", nickname = "generateCompareOverviewReportAsPdfUsingPOST", notes = "Generate comparison overview report as a PDF file", response = byte[].class, responseContainer = "List", authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "compare", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = byte[].class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Illegal input for operation. This response corresponds to the '400' HTTP status code."),
        @ApiResponse(code = 404, message = "Entity not found. This response corresponds to the '404' HTTP status code.") })
    @RequestMapping(value = "/compare/report/compareOverview/pdf",
        produces = { "application/pdf" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<List<byte[]>> generateCompareOverviewReportAsPdfUsingPOST(@ApiParam(value = "body" ,required=true )  @Valid @RequestBody WeightedPerformanceFilter weightedPerformanceFilter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf(""))) {
                    ApiUtil.setExampleResponse(request, "", "");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "generateCompareOverviewReportAsXls", nickname = "generateCompareOverviewReportAsXlsUsingPOST", notes = "Generate comparison overview report as a XLS file", response = byte[].class, responseContainer = "List", authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "compare", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = byte[].class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Illegal input for operation. This response corresponds to the '400' HTTP status code."),
        @ApiResponse(code = 404, message = "Entity not found. This response corresponds to the '404' HTTP status code.") })
    @RequestMapping(value = "/compare/report/compareOverview/xls",
        produces = { "application/vnd.ms-excel" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<List<byte[]>> generateCompareOverviewReportAsXlsUsingPOST(@ApiParam(value = "body" ,required=true )  @Valid @RequestBody WeightedPerformanceFilter weightedPerformanceFilter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf(""))) {
                    ApiUtil.setExampleResponse(request, "", "");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "generateOsirisOverviewReportAsPdf", nickname = "generateOsirisOverviewReportAsPdfUsingPOST", notes = "Generate osiris overview report as a PDF file", response = byte[].class, responseContainer = "List", authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "compare", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = byte[].class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Illegal input for operation. This response corresponds to the '400' HTTP status code."),
        @ApiResponse(code = 404, message = "Entity not found. This response corresponds to the '404' HTTP status code.") })
    @RequestMapping(value = "/compare/report/osirisOverview/pdf",
        produces = { "application/pdf" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<List<byte[]>> generateOsirisOverviewReportAsPdfUsingPOST(@ApiParam(value = "body" ,required=true )  @Valid @RequestBody WeightedPerformanceFilter weightedPerformanceFilter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf(""))) {
                    ApiUtil.setExampleResponse(request, "", "");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "generateOsirisOverviewReportAsXls", nickname = "generateOsirisOverviewReportAsXlsUsingPOST", notes = "Generate osiris overview report as a XLS file", response = byte[].class, responseContainer = "List", authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "compare", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = byte[].class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Illegal input for operation. This response corresponds to the '400' HTTP status code."),
        @ApiResponse(code = 404, message = "Entity not found. This response corresponds to the '404' HTTP status code.") })
    @RequestMapping(value = "/compare/report/osirisOverview/xls",
        produces = { "application/vnd.ms-excel" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<List<byte[]>> generateOsirisOverviewReportAsXlsUsingPOST(@ApiParam(value = "body" ,required=true )  @Valid @RequestBody WeightedPerformanceFilter weightedPerformanceFilter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf(""))) {
                    ApiUtil.setExampleResponse(request, "", "");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "getCommonDateRange", nickname = "getCommonDateRangeUsingPOST", notes = "", response = CalculationPeriod.class, authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "compare", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CalculationPeriod.class),
        @ApiResponse(code = 400, message = "Illegal input for operation. This response corresponds to the '400' HTTP status code.") })
    @RequestMapping(value = "/compare/commonDateRange",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<CalculationPeriod> getCommonDateRangeUsingPOST(@ApiParam(value = "body"  )  @Valid @RequestBody WeightedCommonDateFilter weightedCommonDateFilter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"endDate\" : \"2000-01-23T04:56:07.000+00:00\",  \"startDate\" : \"2000-01-23T04:56:07.000+00:00\"}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
