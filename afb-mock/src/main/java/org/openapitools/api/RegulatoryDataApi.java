/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.IntermediationFee;
import org.openapitools.model.IntermediationFeeFilter;
import org.openapitools.model.OfficialTemplate;
import org.openapitools.model.RegulatoryDataByInstrumentsFilter;
import org.openapitools.model.RegulatoryDataFilter;
import org.openapitools.model.RegulatoryDataReview;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2018-10-15T15:19:21.557+02:00[Europe/Rome]")

@Validated
@Api(value = "regulatoryData", description = "the regulatoryData API")
public interface RegulatoryDataApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "getIntermediationFeeByInstrument", nickname = "getIntermediationFeeByInstrumentUsingPOST", notes = "Gets the itermediation fee data", response = IntermediationFee.class, authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "regulatorydata", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = IntermediationFee.class),
        @ApiResponse(code = 400, message = "Illegal input for operation. This response corresponds to the '400' HTTP status code."),
        @ApiResponse(code = 404, message = "Entity not found. This response corresponds to the '404' HTTP status code.") })
    @RequestMapping(value = "/regulatoryData/breakdowns/instruments/{instrumentId}/intermediationFee",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<IntermediationFee> getIntermediationFeeByInstrumentUsingPOST(@ApiParam(value = "The Id of the {Fund} or {ETF}",required=true) @PathVariable("instrumentId") Long instrumentId,@ApiParam(value = "filter" ,required=true )  @Valid @RequestBody IntermediationFeeFilter intermediationFeeFilter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"instrumentType\" : \"FUND\",  \"feePercentage\" : 6.02745618307040320615897144307382404804229736328125,  \"basisPoints\" : 0.80082819046101150206595775671303272247314453125,  \"instrument\" : {    \"id\" : \"id\",    \"label\" : \"label\",    \"url\" : \"url\"  }}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "getRegulatoryDataReview", nickname = "getRegulatoryDataReviewUsingPOST", notes = "Gets a global review about a selected regulatory data.", response = RegulatoryDataReview.class, authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "regulatorydata", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = RegulatoryDataReview.class),
        @ApiResponse(code = 400, message = "Illegal input for operation. This response corresponds to the '400' HTTP status code.") })
    @RequestMapping(value = "/regulatoryData/review",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<RegulatoryDataReview> getRegulatoryDataReviewUsingPOST(@ApiParam(value = "filter" ,required=true )  @Valid @RequestBody RegulatoryDataFilter regulatoryDataFilter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"trend\" : 6.02745618307040320615897144307382404804229736328125,  \"regulatoryDataCode\" : \"regulatoryDataCode\",  \"valueDate\" : \"2000-01-23T04:56:07.000+00:00\",  \"instrumentsUnderRegulation\" : 0}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "getRegulatoryDataTemplateByInstrumentId", nickname = "getRegulatoryDataTemplateByInstrumentIdUsingPOST", notes = "Gets official data of selected regulation or directive for de {Instrument} received", response = OfficialTemplate.class, authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "regulatorydata", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = OfficialTemplate.class),
        @ApiResponse(code = 400, message = "Illegal input for operation. This response corresponds to the '400' HTTP status code."),
        @ApiResponse(code = 404, message = "Entity not found. This response corresponds to the '404' HTTP status code.") })
    @RequestMapping(value = "/regulatoryData/breakdowns/instruments/{instrumentId}/officialTemplate",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<OfficialTemplate> getRegulatoryDataTemplateByInstrumentIdUsingPOST(@ApiParam(value = "The Id of the {Fund} or {ETF}",required=true) @PathVariable("instrumentId") Long instrumentId,@ApiParam(value = "filter" ,required=true )  @Valid @RequestBody RegulatoryDataFilter regulatoryDataFilter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"instrumentType\" : \"FUND\",  \"priips\" : {    \"costs\" : {      \"ongoingCostsPortfolioTransactionCosts\" : 3.35319334701124294184637619764544069766998291015625,      \"oneOffCostsPortfolioExitCostAtHalfRhp\" : 6.77832496304801335185175048536621034145355224609375,      \"existingCarriedInterestFees\" : \"Y\",      \"incidentalCostsPortfolioCarriedInterest\" : 6.438423552598546706349225132726132869720458984375,      \"existingPerformanceFees\" : \"Y\",      \"oneOffCostsPortfolioExitCostAtRhp\" : 6.87805222012787620400331434211693704128265380859375,      \"ongoingCostsPortfolioManagementCosts\" : 5.94489560761401580890606055618263781070709228515625,      \"oneOffCostPortfolioEntryCostAcquired\" : 1.2846590061165319429647979632136411964893341064453125,      \"ongoingCostsPortfolioOtherCosts\" : 6.70401929795003592715829654480330646038055419921875,      \"incidentalCostsPortfolioPerformanceFees\" : 3.557195227068097320710649000830017030239105224609375,      \"oneOffCostsPortfolioExitCostAt1Year\" : 2.884162126668780246063761296682059764862060546875,      \"oneOffCostPortfolioEntryCost\" : 6.96511769763884558415156789124011993408203125,      \"oneOffCostsPortfolioSlidingExitCostIndicator\" : \"Y\"    },    \"generalPortfolioInformation\" : {      \"portfolioGuarantorName\" : \"portfolioGuarantorName\",      \"shareClassCurrency\" : \"shareClassCurrency\",      \"eosPortfolio\" : \"Y\",      \"portfolioIdentifyingData\" : \"portfolioIdentifyingData\",      \"typeOfIdentificationCodeForTheFundShareOrPortfolio\" : 7,      \"fundCicCode\" : \"fundCicCode\",      \"referenceDate\" : \"2000-01-23T04:56:07.000+00:00\",      \"portfolioIssuerName\" : \"portfolioIssuerName\",      \"portfolioName\" : \"portfolioName\",      \"portfolioPriipsCategory\" : 3    },    \"specificDataForStructuredProducts\" : {      \"riyRhp\" : 9.1831235947739937586220548837445676326751708984375,      \"oneOffCostsPortfolioExitCostRiy\" : 4.57393626423225096999658489949069917201995849609375,      \"ongoingCostsPortfolioTransactionCostsRiy\" : 9.2541839462678385785920909256674349308013916015625,      \"totalCost1Year\" : 8.761432466225475224064211943186819553375244140625,      \"totalCostHalfRhp\" : 0.4182561061793121925944660688401199877262115478515625,      \"incidentalCostsPortfolioCarriedInterestsRiy\" : \"incidentalCostsPortfolioCarriedInterestsRiy\",      \"riy1Year\" : 1.826870217705811594299802891327999532222747802734375,      \"riyHalfRhp\" : 3.502657762086400783374529055436141788959503173828125,      \"oneOffCostsPortfolioEntryCostRiy\" : 6.623518433804886029747649445198476314544677734375,      \"ongoingCostsOtherOngoingCostsRiy\" : 8.863729185622826634016746538691222667694091796875,      \"totalCostRhp\" : 5.2991435602753593769875806174241006374359130859375,      \"incidentalCostsPortfolioPerformanceFeesRiy\" : 8.289659398142969592981899040751159191131591796875    },    \"narratives\" : {      \"capitalGuaranteeLevel\" : 0.885137473901165261480628032586537301540374755859375,      \"riskNarrativePortfolio\" : \"riskNarrativePortfolio\",      \"portfolioPerformanceFeesNarrative\" : \"portfolioPerformanceFeesNarrative\",      \"comprehensionAlertPortfolio\" : \"Y\",      \"referenceLanguage\" : \"referenceLanguage\",      \"intendedTargetMarketRetailInvestorPortfolio\" : \"intendedTargetMarketRetailInvestorPortfolio\",      \"portolioCarriedInterestNarrative\" : \"portolioCarriedInterestNarrative\",      \"capitalGuarantee\" : \"capitalGuarantee\",      \"capitalGuaranteeEarlyExitConditions\" : \"2000-01-23T04:56:07.000+00:00\",      \"capitalGuaranteeLimitations\" : \"capitalGuaranteeLimitations\",      \"otherComment\" : \"otherComment\",      \"typeOfUnderlyingInvestmentOption\" : \"typeOfUnderlyingInvestmentOption\",      \"otherMateriallyRelevantRiskNarrativePortfolio\" : \"otherMateriallyRelevantRiskNarrativePortfolio\",      \"investmentObjectivePortfolio\" : \"investmentObjectivePortfolio\",      \"possibleMaximumLossPortfolio\" : 7.05877035158235610623478351044468581676483154296875,      \"capitalGuaranteePortfolio\" : \"capitalGuaranteePortfolio\"    },    \"performanceScenario\" : {      \"portfolioReturnStressScenario1Year\" : 6.6284642750877420525057459599338471889495849609375,      \"portfolioNumberOfObservedReturnM0\" : 0.10263654006109401706225980888120830059051513671875,      \"portfolioObservedExcessKurtosis\" : 4.6523964329332461176136348512955009937286376953125,      \"portfolioReturnFavorableScenarioRhp\" : 5.5332583970349862312332334113307297229766845703125,      \"portfolioReturnUnfavorableScenarioRhp\" : 9.132027271330688478201409452594816684722900390625,      \"portfolioObservedSigma\" : 8.9695787981969115065794539987109601497650146484375,      \"portfolioReturnModerateScenario1Year\" : 3.258856561904760695824734284542500972747802734375,      \"portfolioReturnStressScenarioRhp\" : 1.0414449161182959269211778519093059003353118896484375,      \"portfolioReturnModerateScenarioRhp\" : 0.202532411323639305322785730822943150997161865234375,      \"portfolioReturnStressScenarioHalfRhp\" : 4.258773108174356281097061582840979099273681640625,      \"portfolioObservedSkewness\" : 7.7403518187411730622216055053286254405975341796875,      \"portfolioObservedStressedVolatility\" : 3.02057969929162428712743349024094641208648681640625,      \"portfolioReturnUnfavorableScenario1Year\" : 4.67894798900584873990737833082675933837890625,      \"portfolioReturnFavorableScenarioHalfRhp\" : 7.04836565559697003635619694250635802745819091796875,      \"portfolioReturnModerateScenarioHalfRhp\" : 4.078845849666752343409825698472559452056884765625,      \"portfolioReturnFavorableScenario1Year\" : 3.05761002410493443193217899533919990062713623046875,      \"portfolioMeanObservedReturnsM1\" : 6.51918095101838179772357761976309120655059814453125,      \"portfolioReturnUnfavorableScenarioHalfRhp\" : 7.26052126480210358039357743109576404094696044921875    },    \"specificDataForGermanCat\" : {      \"additionalInformationForCapitalPreservation\" : {        \"capitalPreservationLevel\" : 4.4596050349586793259959449642337858676910400390625,        \"multiplierPi\" : 3.901545264248647004734493748401291668415069580078125,        \"existingCapitalPreservation\" : \"Y\",        \"usesPi\" : \"Y\",        \"timeIntervalMaximumLoss\" : \"timeIntervalMaximumLoss\"      },      \"characteristics\" : {        \"durationBonds\" : 1.7325933120207193116613098027301020920276641845703125,        \"bondsWeight\" : 2.940964297482789646664969041012227535247802734375,        \"annualizedReturnVolatility\" : 0.434313988241488146968549699522554874420166015625      }    },    \"riskAssessment\" : {      \"flexVevHistorical\" : 9.7029638000235660655334868351928889751434326171875,      \"flexVevRefAssetAllocation\" : 0.519900201872498524124921459588222205638885498046875,      \"isFlexible\" : \"Y\",      \"existingCreditRisk\" : \"Y\",      \"isRiskLimitRelevant\" : \"Y\",      \"mrm\" : 5,      \"portfolioVevReference\" : 4.863159081028840091676102019846439361572265625,      \"recommendedHoldingPeriod\" : \"recommendedHoldingPeriod\",      \"sri\" : 6,      \"valuationFrequency\" : 8,      \"maturityDate\" : \"2000-01-23T04:56:07.000+00:00\",      \"flexVevRiskLimit\" : 7.93350688173715123951978966942988336086273193359375,      \"crm\" : 0,      \"liquidityRisk\" : \"M\"    },    \"specificUcitsDataForInsurersForMop\" : {      \"transactionsCostsMethodology\" : \"transactionsCostsMethodology\",      \"ucitsKidWebAddress\" : \"ucitsKidWebAddress\",      \"incidentalCostsPortfolioCarriedInterestUcits\" : 5.31248970433629619236626240308396518230438232421875,      \"portfolioUcitsSrri\" : 3,      \"ongoingCostsPortfolioTransactionCosts\" : 3.78141247307679151390402694232761859893798828125,      \"priipDataDelivery\" : \"Y\",      \"portfolioUcitsVol\" : 9.8974926292155060991717618890106678009033203125,      \"ucitsDataDelivery\" : \"Y\",      \"incidentalCostsPortfolioPerformanceFeesUcits\" : 8.3782374103486905170257159625180065631866455078125,      \"ongoingCostsPortfolioOtherCostsUcits\" : 7.60686372309257929913428597501479089260101318359375    }  },  \"instrument\" : {    \"id\" : \"id\",    \"label\" : \"label\",    \"url\" : \"url\"  },  \"mifid2\" : {    \"generalFinancialInstrumentInformation\" : {      \"productCategoryOrNature\" : \"productCategoryOrNature\",      \"typeOfIdentificationCodeForTheFinancialInstrument\" : \"typeOfIdentificationCodeForTheFinancialInstrument\",      \"financialInstrumentCurrency\" : \"financialInstrumentCurrency\",      \"financialInstrumentLegalStructure\" : \"S\",      \"financialInstrumentGuarantorName\" : \"financialInstrumentGuarantorName\",      \"financialInstrumentName\" : \"financialInstrumentName\",      \"leveragedFinancialInstrumentOrContingentLiability\" : \"Y\",      \"reportingDate\" : \"2000-01-23T04:56:07.000+00:00\",      \"financialInstrumentIssuerName\" : \"financialInstrumentIssuerName\",      \"financialInstrumentIdentifyingData\" : \"financialInstrumentIdentifyingData\"    },    \"costsAndCharges\" : {      \"exAnte\" : {        \"structuredSecuritiesQuotation\" : \"U\",        \"oneOffCostsFinancialInstrumentMaximumExitCostFixedAmountItaly\" : 7.3862819483858839220147274318151175975799560546875,        \"oneOffCostsFinancialInstrumentTypicalExitCost\" : 1.231513536777255612975068288506008684635162353515625,        \"oneOffCostFinancialInstrumentExitCostStructuredSecuritiesPriorRhp\" : 7.061401241503109105224211816675961017608642578125,        \"oneOffCostFinancialInstrumentMaximumEntryCostAcquired\" : 9.301444243932575517419536481611430644989013671875,        \"financialInstrumentDistributionFee\" : 0.80082819046101150206595775671303272247314453125,        \"financialInstrumentManagementFee\" : 1.46581298050294517310021547018550336360931396484375,        \"oneOffCostFinancialInstrumentMaximumEntryCostFixedAmountItaly\" : 3.61607674925191080461672754609026014804840087890625,        \"oneOffCostsFinancialInstrumentMaximumExitCost\" : 2.027123023002321833274663731572218239307403564453125,        \"financialInstrumentTransactionCostsExAnte\" : 5.63737665663332876420099637471139430999755859375,        \"financialInstrumentIncidentalCostsExAnte\" : 6.02745618307040320615897144307382404804229736328125,        \"financialInstrumentOngoingCosts\" : 5.962133916683182377482808078639209270477294921875,        \"oneOffCostFinancialInstrumentEntryCost\" : 2.3021358869347654518833223846741020679473876953125,        \"oneOffCostsFinancialInstrumentMaximumExitCostAcquired\" : 4.1456080298839363962315474054776132106781005859375      },      \"exPost\" : {        \"financialInstrumentOngoingCostsExPost\" : 7.4577447736837658709418974467553198337554931640625,        \"oneOffCostStructuredSecuritiesEntryCostExPost\" : 5.02500479152029466689555192715488374233245849609375,        \"oneOffCostsStructuredSecuritiesExitCostExPost\" : 9.965781217890562260208753286860883235931396484375,        \"beginningOfCalculationPeriod\" : \"2000-01-23T04:56:07.000+00:00\",        \"financialInstrumentTransactionCostsExPost\" : 1.173074250955943309548956676735542714595794677734375,        \"ftructuredSecuritiesOngoingCostsExPostAccumulated\" : 4.9652184929849543237878606305457651615142822265625,        \"endOfCalculationPeriod\" : \"2000-01-23T04:56:07.000+00:00\",        \"financialInstrumentDistributionFeeExPost\" : 1.024645700144157789424070870154537260532379150390625,        \"financialInstrumentIncidentalCostsExPost\" : 1.489415909854170383397331534069962799549102783203125,        \"financialInstrumentManagementFeeExPost\" : 6.8468526983526398765889098285697400569915771484375      }    },    \"distributionStrategy\" : {      \"executionOnly\" : \"R\",      \"investmentAdvice\" : \"R\",      \"executionWithAppropriatenessTestOrNonAdvisedServices\" : \"R\",      \"portfolioManagement\" : \"R\"    },    \"targetMarkets\" : {      \"riskTolerance\" : {        \"riskToleranceForNonPriipsAndNonUcitsSpain\" : 6,        \"riskTolerancePriipsMethodology\" : 8,        \"notForInvestorsWithTheLowestRiskToleranceGermany\" : \"Y\",        \"riskToleranceUcitsMetholodology\" : 9,        \"riskToleranceInternalMethodologyForNonPriipsAndNonUcits\" : \"L\"      },      \"knowledgeAndOrExperience\" : {        \"advancedInvestor\" : \"Y\",        \"expertInvestorGermany\" : \"Y\",        \"basicInverstor\" : \"Y\",        \"informedInvestor\" : \"Y\"      },      \"abilityToBearLosses\" : {        \"limitedCapitalLoss\" : \"Y\",        \"noCapitalGuarantee\" : \"Y\",        \"noCapitalLoss\" : \"Y\",        \"limitedCapitalLossLevel\" : 9.3693102714106686335071572102606296539306640625,        \"lossBeyondCapital\" : \"Y\"      },      \"clientObjectivesAndNeeds\" : {        \"timeHorizon\" : \"timeHorizon\",        \"returnProfileIncome\" : \"Y\",        \"specificInvestmentNeed\" : \"Y\",        \"returnProfileGrowth\" : \"Y\",        \"maturityDate\" : \"2000-01-23T04:56:07.000+00:00\",        \"returnProfilePreservation\" : \"Y\",        \"returnProfileHedging\" : \"Y\",        \"returnProfilePensionSchemeGermany\" : \"Y\",        \"optionOrLeveragedReturnProfile\" : \"Y\",        \"mayBeTerminatedEarly\" : \"Y\",        \"returnProfileOther\" : \"Y\"      },      \"inverstorType\" : {        \"investorTypeProfessional\" : \"Y\",        \"investorTypeRetail\" : \"Y\",        \"investorTypeEligibleCounterparty\" : \"Y\"      }    }  }}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "getRegulatoryDataTemplateByInstrumentsAsXls", nickname = "getRegulatoryDataTemplateByInstrumentsAsXlsUsingPOST", notes = "Gets the official template that corresponds to a selected regulation or directive.", response = byte[].class, responseContainer = "List", authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "regulatorydata", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = byte[].class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Illegal input for operation. This response corresponds to the '400' HTTP status code."),
        @ApiResponse(code = 404, message = "Entity not found. This response corresponds to the '404' HTTP status code.") })
    @RequestMapping(value = "/regulatoryData/breakdowns/instruments/officialTemplate/xls",
        produces = { "application/vnd.ms-excel" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<List<byte[]>> getRegulatoryDataTemplateByInstrumentsAsXlsUsingPOST(@ApiParam(value = "filter" ,required=true )  @Valid @RequestBody RegulatoryDataByInstrumentsFilter regulatoryDataByInstrumentsFilter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf(""))) {
                    ApiUtil.setExampleResponse(request, "", "");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
